#include "stdafx.h"
#include <string>
#include <iostream>

using namespace std;

template <typename T>
class CData
{
public:
	T Data;
public:
	CData(void) : Data(0) {}
	CData(T tData) : Data(tData) {}
	T GetData(void) { return Data; }
	void SetData(T tData) { Data = tData; }
	T operator +(CData<T> &rData) { return (Data + rData.GetData()); }
	T operator -(CData<T> &rData) { return (Data - rData.GetData()); }
	T operator *(CData<T> &rData) { return (Data * rData.GetData()); }
	T operator /(CData<T> &rData)
	{ 
		T Temp = rData.GetData();
		if (Temp == 0)
		{
			printf("0으로는 나눌 수 없습니다!\n");
			printf("결과는 무조건 0으로 처리됩니다!\n");
			return 0;
		}
		return (Data / rData.GetData());
	 }

#ifndef REALNUMBER
	T operator %(CData<T> &rData) { return (Data % rData.GetData()); }
#endif // !REALNUMBER
	
};

enum MENU
{
	MENUERROR = -1,
	MENUERRORREALNUMBER,
	MENUADD,
	MENUSUB,
	MENUMUL,
	MENUDIV,
	MENUMOD
};
template <typename T>
class CCalculator
{
private:
	CData<T> Data[2];
public:
	void ShowIntro(void)
	{
		printf("간단한 계산기 프로그램입니다.\n");
		printf("1. 덧셈 2. 뺄셈 3. 곱셈 4. 나눗셈 5. 나머지 \n");
		printf("-------------------------------------------------\n");
	}

	MENU InputMenu(void)
	{
		MENU eMenu;
		printf("원하는 번호를 입력해주세요 : ");
		scanf("%d", (int *)(&eMenu));

		if (eMenu < MENUADD || eMenu > MENUMOD)
		{
			return MENUERROR;
		}

#ifndef REALNUMBER
		if (eMenu == MENUMOD)
		{
			return MENUERRORREALNUMBER;
		}
#endif // !REALNUMBER
		return eMenu;
	}

	void InputOperand(void)
	{
		double Operand[2];
		printf("아무 숫자 2개를 입력해주세요 : ");
		scanf("%lf %lf", &Operand[0], &Operand[1]);
		Data[0].SetData(Operand[0]);
		Data[1].SetData(Operand[1]);
	}

	T Add(void) { return (Data[0] + Data[1]); }
	T Sub(void) { return (Data[0] - Data[1]); }
	T Mul(void) { return (Data[0] * Data[1]); }
	T Div(void) { return (Data[0] / Data[1]); }
#ifndef REALNUMBER
	T Mod(void) { return (Data[0] % Data[1]); }
#endif // !REALNUMBER

	void Operation(int(CCalculator<int>::*pDataFunction)(void))
	{
		printf("계산 결과는 (%d)입니다.\n", (this->*pDataFunction)());
	}

	void Operation(double(CCalculator<double>::*pDataFunction)(void))
	{
		printf("계산 결과는 (%f)입니다.\n", (this->*pDataFunction)());
	}

};




int main(void)
{

	CCalculator<int> IntCal;

	int (CCalculator<int>::*pIntCalFunc[5]) (void)
		= {
		&CCalculator<int>::Add,
		&CCalculator<int>::Sub,
		&CCalculator<int>::Mul,
		&CCalculator<int>::Div,
		&CCalculator<int>::Mod,
	};


	while (true)
	{
		try
		{
			IntCal.ShowIntro();
			MENU eMenu = IntCal.InputMenu();
			if (eMenu == MENUERROR || eMenu == MENUERRORREALNUMBER)
			{
				throw eMenu;
			}
			IntCal.InputOperand();
			IntCal.Operation(pIntCalFunc[eMenu - 1]);
		}
		catch(MENU &eMenu)
		{
			if (eMenu == MENUERROR) printf("잘못된 번호를 입력했습니다!\n");
			else if (eMenu == MENUERRORREALNUMBER) printf("실수는 나머지연산이 불가합니다.\n");
			printf("\n");
		}

		system("pause"); system("cls");
		
	}

	return 0;
}